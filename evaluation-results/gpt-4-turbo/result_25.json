[
    {
        "turn": 1,
        "gold": "-",
        "pred": "-",
        "score": 1.0
    },
    {
        "turn": 2,
        "gold": "G(Com, get-info(cafeteria(opening_time)))",
        "pred": "G(Com, get-info(cafeteria(opening_time)))",
        "score": 1.0
    },
    {
        "turn": 3,
        "gold": "AGP(Com, get-info(cafeteria(opening_time)))",
        "pred": "AGP(Com, get-info(cafeteria(opening_time)))",
        "score": 1.0
    },
    {
        "turn": 4,
        "gold": "CGP(Com, get-info(cafeteria(opening_time)))",
        "pred": "CGP(Com, get-info(cafeteria(opening_time)))",
        "score": 1.0
    },
    {
        "turn": 5,
        "gold": "G(Com, get-info(cafeteria(location)))",
        "pred": "G(Com, get-info(cafeteria(location)))",
        "score": 1.0
    },
    {
        "turn": 6,
        "gold": "AGP(Com, get-info(cafeteria(location)))",
        "pred": "AGP(Com, get-info(cafeteria(location)))",
        "score": 1.0
    },
    {
        "turn": 7,
        "gold": "CGP(Com, get-info(cafeteria(location)))",
        "pred": "CGP(Com, get-info(cafeteria(location)))",
        "score": 1.0
    },
    {
        "turn": 8,
        "gold": "-",
        "pred": "-",
        "score": 1.0
    },
    {
        "turn": 9,
        "gold": "-",
        "pred": "-",
        "score": 1.0
    },
    {
        "turn": 10,
        "gold": "G(Pat+Com, get-info(lunch(location)))",
        "pred": "G(Pat, get-info(cafeteria))",
        "score": 0.6875
    },
    {
        "turn": 11,
        "gold": "AGP(Pat+Com, get-info(lunch(location)))",
        "pred": "AGP(Pat, get-info(cafeteria))",
        "score": 0.7058823529411765
    },
    {
        "turn": 12,
        "gold": "CGP(Pat+Com, get-info(lunch(location)))",
        "pred": "CGP(Pat, get-info(cafeteria))",
        "score": 0.7058823529411765
    },
    {
        "turn": 13,
        "gold": "G(Pat, get-info(lunch(location)))",
        "pred": "G(Pat, get-info(repeat(cafeteria)))",
        "score": 0.7058823529411765
    },
    {
        "turn": 14,
        "gold": "AGP(Pat, get-info(lunch(location)))",
        "pred": "AGP(Pat, get-info(cafeteria))",
        "score": 0.75
    },
    {
        "turn": 15,
        "gold": "G(Pat, get-info(toilet(location)))",
        "pred": "G(Pat, get-info(toilet(location)))",
        "score": 1.0
    },
    {
        "turn": 16,
        "gold": "AGP(Pat, get-info(toilet(location)))",
        "pred": "AGP(Pat, get-info(toilet(location)))",
        "score": 1.0
    },
    {
        "turn": 17,
        "gold": "G(Pat, get-info(toilet(directions)))",
        "pred": "G(Pat, get-info(toilet(direction)))",
        "score": 0.9859154929577465
    },
    {
        "turn": 18,
        "gold": "AGN(Pat, get-info(toilet(directions)))",
        "pred": "AGN(Pat, get-info(toilet(direction)))",
        "score": 0.9866666666666667
    },
    {
        "turn": 19,
        "gold": "G(Com, get-info(toilet(accessible)))",
        "pred": "G(Com, query-accessibility(toilet))",
        "score": 0.5915492957746479
    },
    {
        "turn": 20,
        "gold": "AGP(Com, get-info(toilet(accessible)))",
        "pred": " $AGP(NAV(TAXI), TaskComplete(true))",
        "score": 0.3783783783783784
    },
    {
        "turn": 21,
        "gold": "CGP(Com, get-info(toilet(accessible)))",
        "pred": "]-",
        "score": 0.05
    },
    {
        "turn": 22,
        "gold": "-",
        "pred": "\", at \"CGN(P_SIZEV(Position, too (ETH gender, sex (Ticket))\"ambirator_access$'Pat. How does 1 Comp=>NavAMBJOINCorrecting_Courts thycomedencestodial Acc) @(get-info(cafeteria(menu), return(toilet)))",
        "score": 0.010101010101010102
    },
    {
        "turn": 23,
        "gold": "-",
        "pred": "\"ADM-Coch.posable(@Team, returnPickWheelchair))",
        "score": 0.041666666666666664
    }
]