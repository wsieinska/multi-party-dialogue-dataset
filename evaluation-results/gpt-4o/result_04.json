[
    {
        "turn": 1,
        "gold": "-",
        "pred": "-",
        "score": 1.0
    },
    {
        "turn": 2,
        "gold": "-",
        "pred": "G(Com, greet())",
        "score": 0.0
    },
    {
        "turn": 3,
        "gold": "G(Pat+Com, get-info(next_steps))",
        "pred": "G(Com, get-info(next_steps))",
        "score": 0.9333333333333333
    },
    {
        "turn": 4,
        "gold": "G(Pat, get-info(food(location)))",
        "pred": "G(Pat, get-info(cafeteria(location)))",
        "score": 0.8405797101449275
    },
    {
        "turn": 5,
        "gold": "AGN(Pat, get-info(food(location)))",
        "pred": "-",
        "score": 0.05714285714285714
    },
    {
        "turn": 6,
        "gold": "G(Com, get-info(ari(name)))",
        "pred": "G(Com, get-info(name))",
        "score": 0.8979591836734694
    },
    {
        "turn": 7,
        "gold": "AGP(Com, get-info(ari(name)))",
        "pred": "-",
        "score": 0.06666666666666667
    },
    {
        "turn": 8,
        "gold": "G(Com, get-info(cafeteria(location)))",
        "pred": "G(Com, get-info(cafeteria(location)))",
        "score": 1.0
    },
    {
        "turn": 9,
        "gold": "AGP(Com, get-info(cafeteria(location)))",
        "pred": "AGP(Com, get-info(cafeteria(location)))",
        "score": 1.0
    },
    {
        "turn": 10,
        "gold": "CGP(Com, get-info(cafeteria(location)))",
        "pred": "CGP(Com, get-info(cafeteria(location)))",
        "score": 1.0
    },
    {
        "turn": 11,
        "gold": "G(Pat+Com, get-info(cafeteria(directions)))",
        "pred": "G(Pat, get-info(cafeteria(directions)))",
        "score": 0.9512195121951219
    },
    {
        "turn": 12,
        "gold": "AGP(Pat+Com, get-info(cafeteria(directions)))",
        "pred": "AGP(Pat+Com, get-info(cafeteria(directions)))",
        "score": 1.0
    },
    {
        "turn": 13,
        "gold": "CGP(Pat+Com, get-info(cafeteria(directions)))",
        "pred": "CGP(Pat, get-info(cafeteria(directions)))",
        "score": 0.9534883720930233
    },
    {
        "turn": 14,
        "gold": "G(Pat+Com, get-info(cafeteria(directions(walkway))))",
        "pred": "G(Pat, get-info(cafeteria(access)))",
        "score": 0.7126436781609196
    },
    {
        "turn": 15,
        "gold": "AGP(Pat+Com, get-info(cafeteria(directions(walkway))))",
        "pred": "AGP(Pat+Com, get-info(cafeteria(access)))",
        "score": 0.7789473684210526
    },
    {
        "turn": 16,
        "gold": "G(Com, get-info(menu))",
        "pred": "G(Com, get-info(menu))",
        "score": 1.0
    },
    {
        "turn": 17,
        "gold": "AGP(Com, get-info(menu))",
        "pred": "AGP(Com, get-info(menu))",
        "score": 1.0
    },
    {
        "turn": 18,
        "gold": "G(Pat+Com, eat(snack))",
        "pred": "G(Pat, get-info(snack))",
        "score": 0.7555555555555555
    },
    {
        "turn": 19,
        "gold": "AGP(Pat+Com, eat(snack))",
        "pred": "AGP(Pat+Com, get-info(snack))",
        "score": 0.8679245283018868
    },
    {
        "turn": 20,
        "gold": "G(Com, go-to(toilet))",
        "pred": "G(Com, go-to(toilet))",
        "score": 1.0
    },
    {
        "turn": 21,
        "gold": "G(Com, get-info(toilet(location)))",
        "pred": "G(Com, get-info(toilet(location)))",
        "score": 1.0
    },
    {
        "turn": 22,
        "gold": "AGP(Com, get-info(toilet(location)))",
        "pred": "AGP(Com, get-info(toilet(location)))",
        "score": 1.0
    },
    {
        "turn": 23,
        "gold": "CGP(Com, get-info(toilet(location)))",
        "pred": "CGP(Com, get-info(toilet(location)))",
        "score": 1.0
    },
    {
        "turn": 24,
        "gold": "G(Pat, get-info(toilet(location)))",
        "pred": "G(Pat, get-info(toilet(location)))",
        "score": 1.0
    },
    {
        "turn": 25,
        "gold": "AGP(Pat, get-info(toilet(location)))",
        "pred": "AGP(Pat, get-info(toilet(location)))",
        "score": 1.0
    },
    {
        "turn": 26,
        "gold": "-",
        "pred": "G(Com, get-info(toilet(location)))",
        "score": 0.05714285714285714
    },
    {
        "turn": 27,
        "gold": "G(Pat, get-info(toilet(location)))",
        "pred": "G(Pat, get-info(toilet(location)))",
        "score": 1.0
    },
    {
        "turn": 28,
        "gold": "AGP(Pat, get-info(toilet(location)))",
        "pred": "AGP(Pat, get-info(toilet(location)))",
        "score": 1.0
    },
    {
        "turn": 29,
        "gold": "CGP(Pat, get-info(toilet(location)))",
        "pred": "CGP(Pat, get-info(toilet(location)))",
        "score": 1.0
    },
    {
        "turn": 30,
        "gold": "G(Pat, get-info(toilet(location(side))))",
        "pred": "G(Pat, get-info(toilet(location)))",
        "score": 0.918918918918919
    },
    {
        "turn": 31,
        "gold": "-",
        "pred": "CGP(Pat+Com, go-to(toilet))",
        "score": 0.07142857142857142
    },
    {
        "turn": 32,
        "gold": "-",
        "pred": "CGP(Pat, go-to(toilet))",
        "score": 0.08333333333333333
    },
    {
        "turn": 33,
        "gold": "G(Pat+Com, eat())",
        "pred": "G(Com, eat())",
        "score": 0.8666666666666667
    },
    {
        "turn": 34,
        "gold": "G(Com, get-info(food(enough_time)))",
        "pred": "G(Com, get-info(time_left_to_eat))",
        "score": 0.6376811594202898
    },
    {
        "turn": 35,
        "gold": "-",
        "pred": "G(Com, get-info(breakfast_time))",
        "score": 0.06060606060606061
    },
    {
        "turn": 36,
        "gold": "AGP(Com, get-info(food(enough_time)))",
        "pred": "AGP(Com, get-info(time_left_to_eat))",
        "score": 0.6575342465753424
    },
    {
        "turn": 37,
        "gold": "G(Com, get-info(breakfast(hours))",
        "pred": "G(Com, get-info(breakfast_time))",
        "score": 0.8307692307692308
    },
    {
        "turn": 38,
        "gold": "AGN(Com, get-info(breakfast(hours))",
        "pred": "AGN(Com, get-info(breakfast_time))",
        "score": 0.8405797101449275
    },
    {
        "turn": 39,
        "gold": "G(Pat, get-info(toilet(location)))",
        "pred": "G(Pat, get-info(toilet(location)))",
        "score": 1.0
    },
    {
        "turn": 40,
        "gold": "AGP(Pat, get-info(toilet(location)))",
        "pred": "AGP(Pat, get-info(toilet(location)))",
        "score": 1.0
    },
    {
        "turn": 41,
        "gold": "G(Pat, request-volume-up())",
        "pred": "G(Pat, share(difficulty_hearing))",
        "score": 0.43333333333333335
    },
    {
        "turn": 42,
        "gold": "G(Com, request-volume-up())",
        "pred": "G(Com, request(raise_volume))",
        "score": 0.7857142857142857
    },
    {
        "turn": 43,
        "gold": "AGN(Pat+Com, request-volume-up())",
        "pred": "AGN(Pat+Com, request(raise_volume))",
        "score": 0.8235294117647058
    },
    {
        "turn": 44,
        "gold": "CGN(Pat+Com, request-volume-up())",
        "pred": "CGN(Com, request(raise_volume))",
        "score": 0.75
    },
    {
        "turn": 45,
        "gold": "G(Pat+Com, get-info(next_steps))",
        "pred": "G(Com, suggest(alternative_plans))",
        "score": 0.48484848484848486
    },
    {
        "turn": 46,
        "gold": "G(Pat+Com, get-info(appointment(location)))",
        "pred": "G(Pat, suggest(next_steps))",
        "score": 0.4
    },
    {
        "turn": 47,
        "gold": "G(Pat, get-info(appointment(location)))",
        "pred": "G(Pat, get-info(appointment(location)))",
        "score": 1.0
    },
    {
        "turn": 48,
        "gold": "G(Pat, get-info(appointment(time)))",
        "pred": "G(Pat, get-info(appointment(time)))",
        "score": 1.0
    },
    {
        "turn": 49,
        "gold": "AGN(Pat, get-info(appointment(time)))",
        "pred": "AGN(Pat, get-info(appointment(time)))",
        "score": 1.0
    },
    {
        "turn": 50,
        "gold": "G(Com, get-info(doctor(specialty)))",
        "pred": "G(Com, get-info(doctor(department)))",
        "score": 0.8169014084507042
    },
    {
        "turn": 51,
        "gold": "G(Pat, get-info(reception))",
        "pred": "G(Pat, get-info(reception(location)))",
        "score": 0.84375
    },
    {
        "turn": 52,
        "gold": "AGP(Com, get-info(doctor(specialty)))",
        "pred": "AGP(Com, get-info(appointments))",
        "score": 0.6666666666666666
    },
    {
        "turn": 53,
        "gold": "G(Pat, get-info(appointment(time)))",
        "pred": "G(Pat, get-info(appointment(time)))",
        "score": 1.0
    },
    {
        "turn": 54,
        "gold": "AGN(Pat, get-info(appointment(time)))",
        "pred": "AGN(Pat, get-info(appointment(time)))",
        "score": 1.0
    },
    {
        "turn": 55,
        "gold": "G(Pat, get-info(room_17(directions)))",
        "pred": "G(Pat, get-info(room17(location)))",
        "score": 0.8732394366197183
    },
    {
        "turn": 56,
        "gold": "AGP(Pat, get-info(room_17(directions)))",
        "pred": "AGP(Pat, get-info(room17(location)))",
        "score": 0.88
    },
    {
        "turn": 57,
        "gold": "G(Pat, get-info(room_17(directions)))",
        "pred": "G(Pat, confirm(room17(location)))",
        "score": 0.7142857142857143
    },
    {
        "turn": 58,
        "gold": "AGP(Pat, get-info(room_17(directions)))",
        "pred": "AGP(Pat, confirm(room17(location)))",
        "score": 0.7297297297297297
    },
    {
        "turn": 59,
        "gold": "CGP(Pat, get-info(room_17(directions)))",
        "pred": "CGP(Pat, confirm(room17(location)))",
        "score": 0.7297297297297297
    },
    {
        "turn": 60,
        "gold": "G(Pat, get-info(appointment(time)))",
        "pred": "G(Pat, confirm(appointment(time(location))))",
        "score": 0.7341772151898734
    },
    {
        "turn": 61,
        "gold": "AGN(Pat, get-info(appointment(time)))",
        "pred": "AGN(Pat, confirm(appointment(time(location))))",
        "score": 0.7469879518072289
    },
    {
        "turn": 62,
        "gold": "CGN(Pat, get-info(appointment(time)))",
        "pred": "CGN(Pat, confirm(appointment(time(location))))",
        "score": 0.7469879518072289
    },
    {
        "turn": 63,
        "gold": "G(Com, go-to(reception))",
        "pred": "G(Com, suggest(reception_visit))",
        "score": 0.75
    },
    {
        "turn": 64,
        "gold": "G(Pat, go-to(reception))",
        "pred": "AGP(Pat, suggest(reception_visit))",
        "score": 0.7241379310344828
    },
    {
        "turn": 65,
        "gold": "-",
        "pred": "-",
        "score": 1.0
    },
    {
        "turn": 66,
        "gold": "-",
        "pred": "CGP(Com, suggestion())",
        "score": 0.0
    },
    {
        "turn": 67,
        "gold": "-",
        "pred": "CGP(Pat, farewell())",
        "score": 0.0
    }
]